#!/bin/bash

echo "üß™ Test de l'API Todo App"
echo "========================="

# Test 1: V√©rifier que l'API r√©pond
echo "1. Test de l'endpoint principal..."
response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/)
if [ "$response" = "200" ]; then
    echo "‚úÖ API principale accessible"
else
    echo "‚ùå API principale non accessible (code: $response)"
fi

# Test 2: R√©cup√©rer tous les todos
echo "2. Test de r√©cup√©ration des todos..."
todos=$(curl -s http://localhost:3000/api/todos)
if [ $? -eq 0 ]; then
    echo "‚úÖ R√©cup√©ration des todos r√©ussie"
    echo "üìã Nombre de todos: $(echo $todos | jq '. | length')"
else
    echo "‚ùå Erreur lors de la r√©cup√©ration des todos"
fi

# Test 3: Cr√©er un nouveau todo
echo "3. Test de cr√©ation d'un todo..."
new_todo=$(curl -s -X POST http://localhost:3000/api/todos \
    -H "Content-Type: application/json" \
    -d '{"title":"Test API","description":"Todo cr√©√© par le script de test"}')
if [ $? -eq 0 ]; then
    echo "‚úÖ Cr√©ation de todo r√©ussie"
    todo_id=$(echo $new_todo | jq -r '._id')
    echo "üÜî ID du todo cr√©√©: $todo_id"
else
    echo "‚ùå Erreur lors de la cr√©ation du todo"
fi

# Test 4: Mettre √† jour le todo
if [ ! -z "$todo_id" ] && [ "$todo_id" != "null" ]; then
    echo "4. Test de mise √† jour du todo..."
    updated_todo=$(curl -s -X PUT http://localhost:3000/api/todos/$todo_id \
        -H "Content-Type: application/json" \
        -d '{"completed":true}')
    if [ $? -eq 0 ]; then
        echo "‚úÖ Mise √† jour du todo r√©ussie"
    else
        echo "‚ùå Erreur lors de la mise √† jour du todo"
    fi
fi

# Test 5: Supprimer le todo
if [ ! -z "$todo_id" ] && [ "$todo_id" != "null" ]; then
    echo "5. Test de suppression du todo..."
    delete_response=$(curl -s -X DELETE http://localhost:3000/api/todos/$todo_id)
    if [ $? -eq 0 ]; then
        echo "‚úÖ Suppression du todo r√©ussie"
    else
        echo "‚ùå Erreur lors de la suppression du todo"
    fi
fi

# Test 6: V√©rifier le frontend
echo "6. Test du frontend..."
frontend_response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/)
if [ "$frontend_response" = "200" ]; then
    echo "‚úÖ Frontend accessible"
else
    echo "‚ùå Frontend non accessible (code: $frontend_response)"
fi

echo ""
echo "üéâ Tests termin√©s !"
echo ""
echo "üåê URLs d'acc√®s:"
echo "   Frontend: http://localhost"
echo "   Backend API: http://localhost:3000"
echo "   MongoDB: localhost:27017"
